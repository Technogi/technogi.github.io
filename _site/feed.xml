<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>Technogi Tech Blog.</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sun, 05 Nov 2017 23:06:50 -0600</pubDate>
    <lastBuildDate>Sun, 05 Nov 2017 23:06:50 -0600</lastBuildDate>
    <generator>Jekyll v3.6.2</generator>
    
      <item>
        <title>Software Testing</title>
        <description>&lt;h2 id=&quot;humanos-imperfectos-desarrollandoutilizando-software-perfecto&quot;&gt;Humanos (imperfectos) desarrollando/utilizando software (perfecto)&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Al ser humanos por naturaleza cometemos errores.&lt;/li&gt;
  &lt;li&gt;El Software a construir es cada vez más especializado y complejo, así como los requerimientos para su desarrollo y construcción.&lt;/li&gt;
  &lt;li&gt;Desarrolladores introducen bugs/errors en la programación.&lt;/li&gt;
  &lt;li&gt;Ineficiente análisis, diseño, interpetración y construcción.&lt;/li&gt;
  &lt;li&gt;El usuario final no tiene un completo conocimiento del uso del Software (Plataforma/App/WebApp).&lt;/li&gt;
  &lt;li&gt;Se efectua un uso incorrecto del Software (Maliciosamente).&lt;/li&gt;
  &lt;li&gt;Se estresa el Software en condiciones para las cuales no fue diseñado.&lt;/li&gt;
  &lt;li&gt;Diferentes setups y ambientes&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;impacto-de-bugserrors-en-software&quot;&gt;Impacto de Bugs/Errors en Software&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Los errores tienen un impacto en el Software, así cómo en las Personas que lo utilizan:
    &lt;ul&gt;
      &lt;li&gt;Poco importante
        &lt;ul&gt;
          &lt;li&gt;Texto mal redactado.&lt;/li&gt;
          &lt;li&gt;Redondeos en Montos (Compra, Venta de Productos).&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Costoso en el rubro económico
        &lt;ul&gt;
          &lt;li&gt;La organización invierte en el Software para generar ganancias y/o reducir costos.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Peligroso
        &lt;ul&gt;
          &lt;li&gt;Atenta contra la vida, bienestar e integridad de las personas.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;cómo-reduzco-y-mitigo-los-riesgos&quot;&gt;Cómo reduzco y mitigo los riesgos&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Pruebas, pruebas y más pruebas
    &lt;ul&gt;
      &lt;li&gt;Existen muchos tipos de pruebas, incluso gente especializada en éste rubro.
        &lt;ul&gt;
          &lt;li&gt;Unit testing&lt;/li&gt;
          &lt;li&gt;Integration testing&lt;/li&gt;
          &lt;li&gt;System testing&lt;/li&gt;
          &lt;li&gt;User acceptance testing&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Automatizar la mayor cantidad de pruebas (sin caer en lo excesivo, por cuestiones de mantenimiento).
    &lt;ul&gt;
      &lt;li&gt;Pyramid Testing Model
        &lt;ul&gt;
          &lt;li&gt;Unit&lt;/li&gt;
          &lt;li&gt;Integration&lt;/li&gt;
          &lt;li&gt;Component&lt;/li&gt;
          &lt;li&gt;End to End (E2E)&lt;/li&gt;
          &lt;li&gt;Exploratory&lt;/li&gt;
        &lt;/ul&gt;

        &lt;p&gt;&lt;img src=&quot;../images/pyramid-testing.png?raw=true&quot; alt=&quot;Alt text&quot; title=&quot;Pyramid Testing&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Emplear las herramientas idóneas para cada tipo de prueba.&lt;/li&gt;
  &lt;li&gt;Probar múltiples escenarios:
    &lt;ul&gt;
      &lt;li&gt;No conformarse con el happy path&lt;/li&gt;
      &lt;li&gt;Probar siempre escenarios de excepción (contemplando escenarios reales y poniendonos el sombrero de tester así cómo de usuario)&lt;/li&gt;
      &lt;li&gt;Probar con distintos valores
        &lt;ul&gt;
          &lt;li&gt;Frontera: mínimos, medios, máximos&lt;/li&gt;
          &lt;li&gt;Erróneos&lt;/li&gt;
          &lt;li&gt;Faltantes&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;en-mi-desarrollo-qué-pruebo&quot;&gt;En mi desarrollo ¿Qué pruebo?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Acceso a datos (DAO)
    &lt;ul&gt;
      &lt;li&gt;Un querie muy complejo&lt;/li&gt;
      &lt;li&gt;Un querie muy abstracto&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Métodos de negocio (Services/Domain)
    &lt;ul&gt;
      &lt;li&gt;Métodos con varias Reglas de Negocio.&lt;/li&gt;
      &lt;li&gt;Métodos con Reglas de Negocio o funcionalidad importantes.&lt;/li&gt;
      &lt;li&gt;Métodos con gran cantidad de Excepciones.&lt;/li&gt;
      &lt;li&gt;Métodos con múltiples caminos.&lt;/li&gt;
      &lt;li&gt;Métodos con datos sensibles, de alto impacto, o trascendencia.&lt;/li&gt;
      &lt;li&gt;Probar happy path y múltiples escenarios&lt;/li&gt;
      &lt;li&gt;Métodos con dependencias a otros servicios (microservicios, apis, sistemas o servicios externos)
        &lt;ul&gt;
          &lt;li&gt;No probar la funcionalidad de la dependencia, más bien simular la dependencia:
            &lt;ul&gt;
              &lt;li&gt;Mocks&lt;/li&gt;
              &lt;li&gt;Stubs&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Métodos relacionados a la seguridad del sistema&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Rest Endpoints (APIs)
    &lt;ul&gt;
      &lt;li&gt;Endpoints con gran cantidad de Excepciones.&lt;/li&gt;
      &lt;li&gt;Endpoints con múltiples caminos.&lt;/li&gt;
      &lt;li&gt;Endpoints con datos sensibles, de alto impacto, o trascendencia.&lt;/li&gt;
      &lt;li&gt;Endpoints con dependencias a otros servicios (microservicios, apis, sistemas o servicios externos)&lt;/li&gt;
      &lt;li&gt;Endpoints relacionados a la seguridad del sistema&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Interfaz de Usuario
    &lt;ul&gt;
      &lt;li&gt;Widgets o Elementos con comportamiento especial&lt;/li&gt;
      &lt;li&gt;Aspectos de seguridad&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Apoyarme siempre de un buen framework para testing&lt;/li&gt;
  &lt;li&gt;Mecanismos de abstracción
    &lt;ul&gt;
      &lt;li&gt;Dummy&lt;/li&gt;
      &lt;li&gt;Fake&lt;/li&gt;
      &lt;li&gt;Stubs&lt;/li&gt;
      &lt;li&gt;Spies&lt;/li&gt;
      &lt;li&gt;Mocks&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Las dependencias a Middleware, Componentes se pueden embeber en la misma prueba, o bien levantar un ambiente idóneo para probar los escenarios necesarios.
    &lt;ul&gt;
      &lt;li&gt;Data Bases&lt;/li&gt;
      &lt;li&gt;Work Queues&lt;/li&gt;
      &lt;li&gt;Stream Channels&lt;/li&gt;
      &lt;li&gt;Schedulers&lt;/li&gt;
      &lt;li&gt;Others&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;extras&quot;&gt;Extras&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Realizar pruebas no garantiza un Software Perfecto ni libre de bugs/errores, más bien provee la identificación y mitigación de estos.&lt;/li&gt;
  &lt;li&gt;Genera un sentido de bienestar con uno mismo y con en el usuario final.&lt;/li&gt;
  &lt;li&gt;La automatización de pruebas se traduce en:
    &lt;ul&gt;
      &lt;li&gt;Incremento en el costo del desarrollo del Software
        &lt;ul&gt;
          &lt;li&gt;Al inicio se invierte mucho tiempo en la automatización de las pruebas.&lt;/li&gt;
          &lt;li&gt;En ocasiones existe más código para probar el Software que el código del propio Software&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Reduce el tiempo de las pruebas&lt;/li&gt;
      &lt;li&gt;Garantiza la adición, o en su defecto la detección de bugs/errors en la refactorización de código o adición de nueva funcionalidad.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;enlaces-recomendados&quot;&gt;Enlaces recomendados&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.process.st/types-of-software-testing/&quot;&gt;4 Types of Software Testing and When You Should Use Them&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.atlassian.com/blog/software-teams/why-software-testing-is-important&quot;&gt;Why is software testing so important? How to share the value with your team&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.soapui.org/testing-dojo/world-of-api-testing/why-test.html&quot;&gt;Why Test Software and APIs?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://martinfowler.com/bliki/TestPyramid.html&quot;&gt;TestPyramid&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.mountaingoatsoftware.com/blog/the-forgotten-layer-of-the-test-automation-pyramid&quot;&gt;The Forgotten Layer of the Test Automation Pyramid&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://martinfowler.com/articles/microservice-testing/&quot;&gt;Testing Strategies in a Microservice Architecture&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.hamvocke.com/blog/testing-microservices/&quot;&gt;Testing Microservices&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.agilenutshell.com/episodes/41-testing-pyramid&quot;&gt;The Testing Pyramid&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://martinfowler.com/articles/mocksArentStubs.html&quot;&gt;Mocks Aren’t Stubs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 01 Nov 2017 17:03:05 -0600</pubDate>
        <link>http://localhost:4000/software-testing</link>
        <guid isPermaLink="true">http://localhost:4000/software-testing</guid>
        
        
        <category>micro trainning</category>
        
        <category>software</category>
        
        <category>testing</category>
        
      </item>
    
      <item>
        <title>¿Como lidiar con un BUG?</title>
        <description>&lt;h2 id=&quot;no-grito-no-corro-no-empujo&quot;&gt;No grito, no corro, no empujo&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;¿Que pasa? ¿Que debería pasar?&lt;/li&gt;
  &lt;li&gt;Pedir detalles para poder reproducir&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;encontrar-el-problema&quot;&gt;Encontrar el problema&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Lograr reproducir el error&lt;/li&gt;
  &lt;li&gt;Lograr repoducirlo consistentemente&lt;/li&gt;
  &lt;li&gt;Encontrar patrones&lt;/li&gt;
  &lt;li&gt;Acotar el error&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;deslinde-de-responabilidades&quot;&gt;Deslinde de responabilidades&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;¿Es verdaderamente un errors?&lt;/li&gt;
  &lt;li&gt;¿Yo lo puedo arreglar?&lt;/li&gt;
  &lt;li&gt;¿Quien lo puede resolver?&lt;/li&gt;
  &lt;li&gt;¿Fué provocado por el último cambio?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;resolver-el-error&quot;&gt;Resolver el error&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Crear rama para investigar el error&lt;/li&gt;
  &lt;li&gt;Crear rama para resolver el error&lt;/li&gt;
  &lt;li&gt;Activar logs y hacer un rastreo operativo&lt;/li&gt;
  &lt;li&gt;LEER las excepciones&lt;/li&gt;
  &lt;li&gt;Hacer rastreo por código&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;una-vez-resuelto-el-bug&quot;&gt;Una vez resuelto el bug&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Crear la/las pruebas que automaticen el escenario que genera el bug&lt;/li&gt;
  &lt;li&gt;Validar el resolución del bug en producción&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;extra&quot;&gt;Extra&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Utilicen herramientas de debug&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 30 Oct 2017 11:10:00 -0600</pubDate>
        <link>http://localhost:4000/bug-handling</link>
        <guid isPermaLink="true">http://localhost:4000/bug-handling</guid>
        
        
        <category>micro trainning</category>
        
        <category>error</category>
        
        <category>code</category>
        
        <category>bug</category>
        
        <category>dev</category>
        
      </item>
    
      <item>
        <title>Logs for Development</title>
        <description>&lt;h2 id=&quot;evaluación-de-librerías-para-logs&quot;&gt;Evaluación de librerías para logs&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Considerar los mecanismos o protocolos de transporte:
    &lt;ul&gt;
      &lt;li&gt;File&lt;/li&gt;
      &lt;li&gt;Console&lt;/li&gt;
      &lt;li&gt;Syslog&lt;/li&gt;
      &lt;li&gt;HTTP&lt;/li&gt;
      &lt;li&gt;Stream&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Buscar siempre que el mecanismo de logging sea de forma asíncrona&lt;/li&gt;
  &lt;li&gt;Para el tema en particular de desarrollo fullstack (dependiendo del stack) considerar en la manera de lo posible que la librería corra sobre el stack completo.&lt;/li&gt;
  &lt;li&gt;Buscar que la librería pueda integrarse con otros servicios o mecanismos de logging para cuestiones cómo: Persistencia, Búsqueda o Rastreo, Centralización, Agregación.
    &lt;ul&gt;
      &lt;li&gt;Loggly&lt;/li&gt;
      &lt;li&gt;Elasticsearch - Logstash - Kibana&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;niveles-de-logs&quot;&gt;Niveles de logs&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;De acuerdo a su nivel de importancia y/o prioridad los logs se pueden categorizar en (dependiendo de la librería o protocolo):
    &lt;ul&gt;
      &lt;li&gt;error&lt;/li&gt;
      &lt;li&gt;warn&lt;/li&gt;
      &lt;li&gt;info&lt;/li&gt;
      &lt;li&gt;verbose&lt;/li&gt;
      &lt;li&gt;debug&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Caso particular para java (Logback):
    &lt;ul&gt;
      &lt;li&gt;TRACE &amp;lt; DEBUG &amp;lt; INFO &amp;lt; WARN &amp;lt; ERROR &amp;lt; OFF&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;reglas&quot;&gt;Reglas&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Evitar uso de métodos bloqueantes:
    &lt;ul&gt;
      &lt;li&gt;console.log&lt;/li&gt;
      &lt;li&gt;System.out.print*&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Los servicios corriendo en producción deben siempre correr con un nivel de logs muy bajo:
    &lt;ul&gt;
      &lt;li&gt;error o warn (O el nivel correspondiente de acuerdo a la librería)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;const logger = winston.createLogger({
  level: 'info',
  format: winston.format.json(),
  transports: [
    //
    // - Write to all logs with level `info` and below to `combined.log` 
    // - Write all logs error (and below) to `error.log`.
    //
    new winston.transports.File({ filename: 'error.log', level: 'error' }),
    new winston.transports.File({ filename: 'combined.log' })
  ]
});

//
// If we're not in production then log to the `console` with the format:
// `${info.level}: ${info.message} JSON.stringify({ ...rest }) `
// 
if (process.env.NODE_ENV !== 'production') {
  logger.add(new winston.transports.Console({
    format: winston.format.simple()
  }));
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;enlaces-recomendados&quot;&gt;Enlaces recomendados&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.loggly.com/ultimate-guide/node-logging-basics/&quot;&gt;Node Logging Basics&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.loggly.com/blog/a-benchmark-of-five-node-js-logging-libraries/&quot;&gt;A benchmark of five Node.js logging libraries&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc5424&quot;&gt;The Syslog Protocol&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.javapractices.com/topic/TopicAction.do?Id=143&quot;&gt;Logging messages&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://logback.qos.ch/manual/architecture.html#basic_selection&quot;&gt;Printing methods and the basic selection rule in logback&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 25 Oct 2017 21:36:01 -0500</pubDate>
        <link>http://localhost:4000/logs-for-development</link>
        <guid isPermaLink="true">http://localhost:4000/logs-for-development</guid>
        
        
        <category>micro trainning</category>
        
        <category>logs</category>
        
        <category>javascript</category>
        
        <category>node</category>
        
      </item>
    
      <item>
        <title>Git Workflow</title>
        <description>&lt;h2 id=&quot;reglas&quot;&gt;Reglas&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Se trabaja sobre un branch por feature / bug de JIRA&lt;/li&gt;
  &lt;li&gt;El nombre del branch es el mismo del feature / bug que ataca&lt;/li&gt;
  &lt;li&gt;Una vez terminado se debe hacer un merge sobre master&lt;/li&gt;
  &lt;li&gt;Durante el desarrollo del feature / bug se debe de hacer rebase&lt;/li&gt;
  &lt;li&gt;Al terminar el desarrollo se debe hacer un merge&lt;/li&gt;
  &lt;li&gt;los rebases se deben de hacer al menos una vez al día&lt;/li&gt;
  &lt;li&gt;Se debe hacer push sobre el branch dos veces al día mínimo&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;proceso-general&quot;&gt;Proceso general&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;git checkout master
git fetch origin
git merge master
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;como-hacer-un-branch-nuevo&quot;&gt;Como hacer un branch nuevo&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;git checkout -b PRJ-123-awesome-feature
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;como-hacer-rebase&quot;&gt;Como hacer rebase&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;git fetch origin
git rebase origin/master
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;como-hacer-el-merge-final&quot;&gt;Como hacer el merge final&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;git rebase -i origin/master
git checkout master
git pull origin master

git merge --no-ff PRJ-123-awesome-feature
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;videos-recomendados&quot;&gt;Videos recomendados&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://youtu.be/9SZ7kSQ2424&quot;&gt;It’ not “pure CI”&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://youtu.be/B78AdLNZBQQ&quot;&gt;What is a pull request&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 20 Oct 2017 18:56:45 -0500</pubDate>
        <link>http://localhost:4000/git-workflow</link>
        <guid isPermaLink="true">http://localhost:4000/git-workflow</guid>
        
        
        <category>micro trainning</category>
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>Error Handling</title>
        <description>
</description>
        <pubDate>Wed, 18 Oct 2017 18:56:45 -0500</pubDate>
        <link>http://localhost:4000/error-handling</link>
        <guid isPermaLink="true">http://localhost:4000/error-handling</guid>
        
        
        <category>micro trainning</category>
        
        <category>error</category>
        
        <category>code</category>
        
      </item>
    
      <item>
        <title>What is Jekyll!</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; is a static site generator, an open-source tool for creating simple yet powerful websites of all shapes and sizes. Here is a little quote from the official website:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;It takes a template directory containing raw text files in various formats, runs it through &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; (or &lt;a href=&quot;http://redcloth.org/textile&quot;&gt;Textile&lt;/a&gt;) and Liquid converters, and spits out a complete, ready-to-publish static website suitable for serving with your favorite web server. Jekyll also happens to be the engine behind &lt;a href=&quot;http://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;, which means you can use Jekyll to host your project’s page, blog, or website from GitHub’s servers for free.&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;jekyllrb.com&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/mojombo/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Mon, 28 Jul 2014 17:48:45 -0500</pubDate>
        <link>http://localhost:4000/blog/jekyll/2014/07/28/welcome-to-jekyll/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/jekyll/2014/07/28/welcome-to-jekyll/</guid>
        
        
        <category>blog</category>
        
        <category>jekyll</category>
        
      </item>
    
  </channel>
</rss>
